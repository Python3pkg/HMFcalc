'''
Created on Apr 20, 2012

@author: jeven
'''
import TableIO
import numpy as np
import os

from UtilityFunctions import *

def ImportTransferFunction(transfer_file):
    """
    Imports the Transfer Function file to be analysed, and returns the pair ln(k), ln(T)
    
    Input: "transfer_file": full path to the file containing the transfer function (from camb).
    
    Output: ln(k), ln(T)
    """
        
    print "  Importing Transfer Function"
    print transfer_file
    k,T = TableIO.readColumns(transfer_file,"!#",columns=[0,1])

  
    print "  Read it in sweet"
    k = np.log(k)
    T = np.log(T)

    return k,T
        
def MassSetup(min_M,max_M,M_step):
    """
    Simply initializes a vector of radius values from input data
    
    Input: None (all necessary inputs defined in config)
    Output: R: an array of values corresponding to different values of the radius.
    """

    print "  Setting Up Vector of Radii"
        
    M = np.arange(min_M,max_M,M_step)
    return M


def CAMB(camb_dict):
    """
    Uses CAMB in its current setup to produce a transfer function
    
    The function needs to be imported by calling ImportTransferFunction.
    """


    SetParameter('camb/params.ini', camb_dict)
    os.chdir('camb')
    os.system('module load gfortran')
    os.system('./camb params.ini')
    os.chdir('..')
    
def Setup(transfer_file,min_M,max_M,M_step,camb_dict):
    """
    A convenience function used to fully setup the workspace in the 'usual' way
    """
    
    
    if transfer_file is None:
        print "using camb..."
        CAMB(camb_dict)
        transfer_file = 'camb/custom_transfer_out.dat'

    M = MassSetup(min_M,max_M,M_step)
    k,T = ImportTransferFunction(transfer_file)
    
    return k,T,M
    
